{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./app/constants/ui.ts","webpack:///./appWindow/constants/ui.ts","webpack:///./appWindow/index.development.ts","webpack:///./appWindow/lib/autoStart.ts","webpack:///./appWindow/lib/config.ts","webpack:///./appWindow/lib/getWindowPosition.ts","webpack:///./appWindow/lib/handleUrl.ts","webpack:///./appWindow/lib/loadThemes.ts","webpack:///./appWindow/lib/logger.ts","webpack:///./appWindow/lib/toggleWindow.ts","webpack:///./appWindow/window/main.ts","webpack:///./appWindow/windowElements/AppTray.ts","webpack:///./appWindow/windowElements/menu.ts","webpack:///./environment/development.js","webpack:///external \"auto-launch\"","webpack:///external \"dateformat\"","webpack:///external \"electron\"","webpack:///external \"electron-debug\"","webpack:///external \"events\"","webpack:///external \"fs\"","webpack:///external \"lodash\"","webpack:///external \"url\"","webpack:///external \"winston\""],"names":["INPUT_HEIGHT","RESULT_HEIGHT","ACTIONS_HEIGHT","CONTENT_VISIBLE_WIDTH","NO_FOUND_ITEMS_HEIGHT","STATUS_BAR_HEIGHT","WARNING_BAR_HEIGHT","MAX_RESULTS","MAX_VISIBLE_RESULTS","SUGGESTION_SECTION_HEIGHT","SUGGESTION_ITEM_HEIGHT","MAX_OUTPUT_HEIGHT","VERTICAL_PADDING","MAGIC_FILTER_HEIGHT","MAGIC_FILTER_PADDING","WINDOW_WIDTH","MAX_WINDOW_HEIGHT","fs","existsSync","USER_DATA","mkdirSync","logger","Logger","trayIconSrc","process","platform","__dirname","isDev","config","remove","firstPageSrc","require","showDevTools","mainWindow","backgroundWindow","feedbackWindow","tray","handleUrlFromArgv","argv","info","url","find","arg","protocolRegex","RegExp","CHIPI_PROTOCOL","test","app","emit","gotSingleLock","requestSingleInstanceLock","quit","setAppUserModelId","on","event","cwd","isMinimized","restore","focus","warn","registerHotkey","hotkey","get","verbose","set","globalShortcut","register","toggleWindow","registerOpenAtLogin","autoStart","initiateWindows","mainWindowAppeared","webContents","closeDevTools","destroy","searchWindow","src","show","AppTray","setAsDefaultProtocolClient","execPath","dock","hide","unregisterAll","path","handleUrl","ipcMain","payload","toWindow","sender","send","key","value","settingsChanges","setIsDev","currentShortcut","appLauncher","isLinux","indexOf","AutoLaunch","name","isEnabled","getLoginItemSettings","openAtLogin","enable","disable","setLoginItemSettings","electronApp","remote","forEach","toLowerCase","setPath","CONFIG_FILE","getPath","defaultSettings","memoize","locale","getLocale","split","lang","country","theme","loadThemes","onboardingFinished","showInTray","firstStart","developerMode","cleanOnHide","plugins","isMigratedPlugins","trackingEnabled","crashReportingEnabled","testingFeature","logLevel","readConfig","JSON","parse","readFileSync","toString","err","writeFileSync","stringify","ipcRenderer","console","log","unlinkSync","isVisible","windowBounds","displayBounds","x","width","y","height","options","winWidth","winHeight","heightWithResults","display","screen","getPrimaryDisplay","positions","id","isWindowVisible","disp","bounds","displays","getAllDisplays","isVisibleSomewhere","some","workAreaSize","action","host","query","message","code","showWindow","isHot","parseInt","prefix","hot","env","label","tsFormat","dateformat","Date","internalLogger","winston","createLogger","level","LOG_CONFIG","format","combine","json","replacer","replaceErrors","transports","File","filename","Console","add","Buffer","Error","error","Object","getOwnPropertyNames","category","logCategory","data","timestamp","debug","windowScreen","cachedXOffsetPercent","cachedYOffsetPercent","appWindow","toggleOff","toggleOn","canToggleOff","updateWindowOffsets","blur","removeListener","windowPosition","calculateWindowPosition","setPosition","setVisibleOnAllWorkspaces","getPosition","currentDisplay","getDisplayNearestPoint","getCursorScreenPoint","winX","winY","Math","ceil","getSize","getWindowPosition","iconSrc","browserWindowOptions","minWidth","frame","resizable","hasShadow","transparent","maximizable","titleBarStyle","minimizable","closable","icon","webPreferences","nodeIntegration","BrowserWindow","loadURL","EventEmitter","quitApplication","toggleMainWindow","showMainWindow","shell","openExternal","preventDefault","getURL","unregister","resetResults","handleCleanOnHideChange","buildMenu","Tray","setToolTip","setContextMenu","separator","type","template","click","submenu","accelerator","checked","menuItem","openDevTools","mode","currentVersion","getVersion","dialog","showMessageBox","title","Menu","buildFromTemplate","setClosable","menu","setApplicationMenu","CHECK_UPDATES","AWS_COGNITO_HOST","AWS_COGNITO","userPoolWebClientId","authorizationUrl","tokenUrl","redirectUrl","redirectUrlWebFlow","GOOGLE_AUTH","authPath","AUTH_TOKEN_STORAGE","serviceName","secureStoreUserName","sessionPartitionName","refreshTokenCookieName","accessTokenCookieName","CHIPI_WEB_CLIENT","authorizationHashPage","externalRedirect","authRedirect","CHIPI_APIS","searchApiHost","connectorApiHost","indexingApiHost","resourceApiHost","helpApiHost","CHIPI_ANALYTICS","analyticsEventsApiHost","deliveryStreamName"],"mappings":"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","file":"./appWindow/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./appWindow/index.development.ts\");\n","// Height of main input\nexport const INPUT_HEIGHT = 50;\n\n// Heigth of default result line\nexport const RESULT_HEIGHT = 60;\n\nexport const ACTIONS_HEIGHT = 20;\n\nexport const CONTENT_VISIBLE_WIDTH = 800 - 2;\n\n// Height of no results\nexport const NO_FOUND_ITEMS_HEIGHT = 50;\n\nexport const STATUS_BAR_HEIGHT = 30;\n\nexport const WARNING_BAR_HEIGHT = 40;\n\n// Maximum results that would be rendered\nexport const MAX_RESULTS = 25;\n\n// Results view shows this count of results without scrollbar\nexport const MAX_VISIBLE_RESULTS = 10;\n\nexport const SUGGESTION_SECTION_HEIGHT = 50;\n\nexport const SUGGESTION_ITEM_HEIGHT = 50;\n\n// The maximum output area height\nexport const MAX_OUTPUT_HEIGHT = MAX_VISIBLE_RESULTS * RESULT_HEIGHT + STATUS_BAR_HEIGHT; \n\n// The total padding of the window\nexport const VERTICAL_PADDING = 40;\n\n// The height of magic filter element\nexport const MAGIC_FILTER_HEIGHT = 44;\n\n// The vertical padding of magic filter element\nexport const MAGIC_FILTER_PADDING = 20;\n","import { MAX_OUTPUT_HEIGHT, INPUT_HEIGHT, WARNING_BAR_HEIGHT } from \"@app/constants/ui\";\n\n// Width of main window\nexport const WINDOW_WIDTH = 800;\n\n// The maximum window area height\nexport const MAX_WINDOW_HEIGHT =  MAX_OUTPUT_HEIGHT + INPUT_HEIGHT + WARNING_BAR_HEIGHT;\n","import { app, ipcMain, crashReporter, globalShortcut, protocol, shell } from \"electron\";\nimport fs from \"fs\";\nimport searchWindow from \"./window/main\";\nimport { isDev, USER_DATA, CHIPI_WEB_CLIENT, AWS_COGNITO, CHIPI_PROTOCOL } from \"Environment\";\nimport Logger from \"@appWindow/lib/logger\";\nimport config from \"@appWindow/lib/config\";\nimport toggleWindow from \"@appWindow/lib/toggleWindow\";\nimport autoStart from \"@appWindow/lib/autoStart\";\nimport AppTray from \"@appWindow/windowElements/AppTray\";\nimport handleUrl from \"@appWindow/lib/handleUrl\";\nimport qs from \"querystring\";\n\n/*\nimport createBackgroundWindow from \"./background/createWindow\";\nimport createFeedbackWindow from \"./main/windows/feedback/createWindow\";\nimport initAutoUpdater from \"./initAutoUpdater\";\n*/\n\n// Ensure user data directory exists before we access it\n// This prevents the race condition on app start for fresh installations\nif (!fs.existsSync(USER_DATA)) {\n  fs.mkdirSync(USER_DATA);\n}\n\nconst logger = new Logger(\"mainProcess\");\nconst trayIconSrc = (() => {\n  switch (process.platform) {\n    case \"darwin\":\n      return `${__dirname}/resources/tray_iconTemplate@2x.png`;\n    case \"win32\":\n      return `${__dirname}/resources/tray_icon.ico`;\n    default:\n      return `${__dirname}/resources/tray_icon.png`;\n  }\n})();\n\n//Remove the config file when app start for dev environment\nif (isDev()) {\n  config.remove();\n}\n\nconst firstPageSrc = `file://${__dirname}/../app/index.html`;\n\nrequire(\"electron-debug\")({ showDevTools: false });\n\nlet mainWindow;\nlet backgroundWindow;\nlet feedbackWindow;\n\nlet tray;\n\nconst handleUrlFromArgv = argv => {\n  logger.info(\"Make single instnace call back\", { argv });\n  // Check if the second instance was attempting to launch a URL for our protocol client\n  const url = argv.find(function(arg) {\n    const protocolRegex = new RegExp(`${CHIPI_PROTOCOL}:\\/\\/`);\n    return protocolRegex.test(arg);\n  });\n\n  if (url) {\n    app.emit(\"open-url\", null, url);\n  }\n};\n\nconst gotSingleLock = app.requestSingleInstanceLock();\n\nif (!gotSingleLock) {\n  app.quit();\n}\n\n// To help some OS limitation, we need to set the app user mode id same to the appId in the build secion within package file.\napp.setAppUserModelId(\"io.chipi.desktop\");\n\napp.on(\"second-instance\", (event, argv, cwd) => {\n  // Someone tried to run a second instance, we should focus our window.\n  if (mainWindow) {\n    if (mainWindow.isMinimized()) {\n      mainWindow.restore();\n    }\n\n    mainWindow.focus();\n\n    // Protocol handler for win32\n    // argv: An array of the second instance’s (command line / deep linked) arguments\n    if (process.platform == \"win32\") {\n      handleUrlFromArgv(argv);\n    }\n  } else {\n    logger.warn(\"Trying to run the second app instance, going to quit\");\n    app.quit();\n  }\n});\n\nconst registerHotkey = () => {\n  let hotkey = config.get(\"hotkey\");\n  logger.verbose(\"Setting hot key\", hotkey);\n\n  if (!hotkey) {\n    // TODO: allow user to set custom hotkey\n    hotkey = \"Control+Space\";\n    config.set(\"hotkey\", hotkey);\n  }\n\n  globalShortcut.register(hotkey, () => {\n    toggleWindow(mainWindow);\n  });\n};\n\nconst registerOpenAtLogin = () => {\n  logger.verbose(\"Setting auto start while app begin\", config.get(\"openAtLogin\"));\n  autoStart.set(config.get(\"openAtLogin\"));\n};\n\n/**\n * Initate windows for the application\n */\nconst initiateWindows = () => {\n  let mainWindowAppeared = false;\n\n  // we need to recreate all the windows if the the windows were already created.\n\n  if (mainWindow) {\n    mainWindow.webContents.closeDevTools();\n    mainWindow.destroy();\n    mainWindowAppeared = true;\n  }\n\n  // Main window\n  mainWindow = searchWindow({\n    // Main window html\n    src: firstPageSrc\n  });\n\n  if (mainWindowAppeared) {\n    mainWindow.show();\n  }\n\n  if (tray) {\n    tray.destroy();\n  }\n\n  tray = new AppTray({\n    src: trayIconSrc,\n    isDev: isDev(),\n    mainWindow,\n    feedbackWindow\n  });\n\n  tray.show();\n\n  // Load and register user hotkey from config\n  registerHotkey();\n\n  mainWindow.show();\n\n};\n\napp.setAsDefaultProtocolClient(CHIPI_PROTOCOL, process.execPath, [\"--\"]);\n\nif (app.dock) {\n  app.dock.hide();\n}\n\n/**\n * The main logic to create windows\n */\napp.on(\"ready\", () => {\n  initiateWindows();\n\n  // Register open at login config\n  registerOpenAtLogin();\n\n  // Unregister and free hotkey for other apps to use, when closing Chipi.\n  app.on(\"will-quit\", () => {\n    // Unregister all shortcuts.\n    globalShortcut.unregisterAll();\n  });\n\n  // Show main window when user opens application, but it is already opened\n  app.on(\"open-url\", (event, path) => handleUrl(mainWindow, backgroundWindow, path));\n\n  if (process.platform == \"win32\") {\n    handleUrlFromArgv(process.argv);\n  }\n});\n\n// Message floating between Main Window and Background Window\nipcMain.on(\"message\", (event, payload) => {\n  const toWindow = event.sender === mainWindow.webContents ? backgroundWindow : mainWindow;\n  toWindow.webContents.send(\"message\", payload);\n});\n\nipcMain.on(\"reloadWindows\", () => {\n  initiateWindows();\n});\n\nipcMain.on(\"updateSettings\", (event, key, value) => {\n  logger.info(\"updateSettings called\", { event, key, value });\n\n  mainWindow.settingsChanges.emit(key, value);\n\n  // Show or hide menu bar icon when it is changed in setting\n  if (key === \"showInTray\") {\n    value ? tray.show() : tray.hide();\n  }\n\n  // Show or hide \"development\" section in tray menu\n  if (key === \"developerMode\") {\n    tray.setIsDev(isDev());\n  }\n\n  if (key === \"openAtLogin\") {\n    config.set(\"openAtLogin\", value);\n    autoStart.set(value);\n  }\n\n  if (key === \"hotkey\") {\n    const currentShortcut = config.get(\"hotkey\");\n    config.set(\"hotkey\", value);\n    registerHotkey();\n  }\n});\n","// NOT CURRENTLY IN USE\nimport { app } from 'electron'\nimport AutoLaunch from 'auto-launch'\n\nlet appLauncher\n\nconst isLinux = ['win32', 'darwin'].indexOf(process.platform) === -1\n\nif (isLinux) {\n  appLauncher = new AutoLaunch({ name: 'Chipi' })\n}\n\nconst isEnabled = () => (\n  isLinux\n    ? appLauncher.isEnabled()\n    : app.getLoginItemSettings().openAtLogin\n)\n\nconst set = (openAtLogin) => {\n  if (isLinux) {\n    return openAtLogin ? appLauncher.enable() : appLauncher.disable()\n  }\n  return app.setLoginItemSettings({ openAtLogin: openAtLogin ? true : false })\n}\n\nexport default { isEnabled, set }\n","import { app, remote, ipcRenderer } from \"electron\";\nimport fs from \"fs\";\nimport loadThemes from \"./loadThemes\";\nimport { isDev } from \"Environment\";\nimport { memoize } from \"lodash\";\n\nconst electronApp = remote ? remote.app : app;\n\n// initiate portable mode\n// set data directory to ./userdata\nprocess.argv.forEach(arg => {\n  if (arg.toLowerCase() === \"-p\" || arg.toLowerCase() === \"--portable\") {\n    electronApp.setPath(\"userData\", `${process.cwd()}/userdata`);\n  }\n});\n\nconst CONFIG_FILE = `${electronApp.getPath(\"userData\")}/config${isDev() ? \"-dev\" : \"\"}.json`;\n\nconst defaultSettings = memoize(() => {\n  const locale = electronApp.getLocale() || \"en-US\";\n  const [lang, country] = locale.split(\"-\");\n  return {\n    locale,\n    lang,\n    country,\n    // use first theme from loadThemes by default\n    theme: loadThemes()[0].value,\n    hotkey: \"Control+Space\",\n    onboardingFinished: false,\n    showInTray: true,\n    firstStart: true,\n    developerMode: false,\n    cleanOnHide: false,\n    plugins: {},\n    isMigratedPlugins: false,\n    trackingEnabled: false,\n    crashReportingEnabled: true,\n    openAtLogin: true,\n    testingFeature: false,\n    logLevel: \"info\"\n  };\n});\n\nconst readConfig = () => {\n  try {\n    return JSON.parse(fs.readFileSync(CONFIG_FILE).toString());\n  } catch (err) {\n    return defaultSettings();\n  }\n};\n\n/**\n * Get a value from global configuration\n * @param  {String} key\n * @return {Any}\n */\nconst get = key => {\n  let config;\n  if (!fs.existsSync(CONFIG_FILE)) {\n    // Save default config to local storage\n    config = defaultSettings();\n    fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));\n  } else {\n    config = readConfig();\n  }\n  return config[key];\n};\n\n/**\n * Write a value to global config. It immedately rewrites global config\n * and notifies all listeners about changes\n *\n * @param  {String} key\n * @param  {Any} value\n */\nconst set = (key, value) => {\n  const config = {\n    // If after app update some keys were added to config\n    // we use default values for that keys\n    ...defaultSettings(),\n    ...readConfig()\n  };\n  config[key] = value;\n  fs.writeFileSync(CONFIG_FILE, JSON.stringify(config, null, 2));\n  // Track settings changes\n  /*trackEvent({\n    category: 'Settings',\n    event: `Change ${key}`,\n    label: value\n  })*/\n  if (ipcRenderer) {\n    console.log(\"notify main process\", key, value);\n    // Notify main process about settings changes\n    ipcRenderer.send(\"updateSettings\", key, value);\n  }\n};\n\n/**\n * Remove saved config file from userdata, especially for development environment\n */\nconst remove = () => {\n  if (fs.existsSync(CONFIG_FILE)) {\n    fs.unlinkSync(CONFIG_FILE);\n  }\n};\n\nexport default { get, set, remove };\n","import { screen } from 'electron'\nimport config from './config'\n\nimport {\n  INPUT_HEIGHT,\n  RESULT_HEIGHT,\n  MAX_VISIBLE_RESULTS,\n} from '@app/constants/ui'\n\nimport {\n    WINDOW_WIDTH\n} from '@appWindow/constants/ui'\n\n\n/**\n * Returns true if a window is at least partially visible on the display\n */\nconst isVisible = (windowBounds, displayBounds) =>\n  !(windowBounds.x > displayBounds.x + displayBounds.width ||\n    windowBounds.x + windowBounds.width < displayBounds.x ||\n    windowBounds.y > displayBounds.y + displayBounds.height ||\n    windowBounds.y + windowBounds.height < displayBounds.y)\n\n/**\n * Computes window position\n */\nexport default ( options: { width?: number, heightWithResults?: number }) : [number, number] => {\n  const winWidth = options.width != null ? options.width : WINDOW_WIDTH\n  const winHeight = options.heightWithResults != null\n    ? options.heightWithResults\n    : MAX_VISIBLE_RESULTS * RESULT_HEIGHT + INPUT_HEIGHT\n\n  const display = screen.getPrimaryDisplay()\n  const positions = config.get('positions') || {}\n\n  if (display.id in positions) {\n    const [x, y] = positions[display.id]\n    const windowBounds = { x, y, winWidth, winHeight }\n    const isWindowVisible = disp => isVisible(windowBounds, disp.bounds)\n\n    if (isWindowVisible(display)) {\n      return [x, y]\n    }\n\n    // The window was moved from the primary screen to a different one.\n    // We have to check that the window will be visible somewhere among the attached displays.\n    const displays = screen.getAllDisplays()\n    const isVisibleSomewhere = displays.some(isWindowVisible)\n\n    if (isVisibleSomewhere) {\n      return [x, y]\n    }\n  }\n\n  const x: number = display.bounds.x + (display.workAreaSize.width - winWidth) / 2\n  const y: number = display.bounds.y + (display.workAreaSize.height - winHeight) / 2\n  return [x, y]\n}\n\n","import { parse } from \"url\";\nimport Logger from \"./logger\";\n//import { on, send } from '../../lib/rpc'\nimport { showWindow } from \"./toggleWindow\";\n\nconst logger = new Logger(\"createWindow.handleUrl\");\n\nexport default (mainWindow, backgroundWindow, url) => {\n  const { host: action, query } = parse(url, true);\n  logger.verbose(\"Handle url from chipi protocol\", { action, query, url });\n  // Currently only search action supported.\n  // We can extend this handler to support more\n  // like `plugins/install` or do something plugin-related\n  switch (action.toLowerCase()) {\n    case \"authreturn\":\n      backgroundWindow.webContents.send(\"message\", {\n        message: \"authCodeReceived\",\n        payload: query.code\n      });\n      showWindow(mainWindow);\n      return;\n    default:\n      showWindow(mainWindow);\n      return;\n  }\n};\n","import Logger from './logger'\nconst logger = new Logger('loadThemes');\n\n/**\n * Load all available themes\n *\n * @return {Array<Object>} Array of objects {value, label}.\n *                         Label is text that is shown in preferences theme selector\n */\nexport default () => {\n  const isHot = parseInt(process.env.HOT) == 1\n\n  console.log(\"process.env.HOT: \" + process.env.HOT);\n\n  console.log(\"process.env.HOT: \" + (isHot));\n  console.log(\"process.env.NODE_ENV: \" + process.env.NODE_ENV);\n  const prefix = isHot ? 'http://localhost:3000/' : '../'\n  logger.info('Theme prefix', {prefix, hot: process.env});\n  return [\n    {\n      value: `${prefix}dist/css/themes/light.css`,\n      label: 'Light'\n    },\n    {\n      value: `${prefix}dist/css/themes/dark.css`,\n      label: 'Dark'\n    }\n  ]\n}\n","import winston, { format } from \"winston\";\nimport { LOG_CONFIG, USER_DATA } from \"Environment\";\nimport dateformat from \"dateformat\";\n\nconst tsFormat = () => dateformat(new Date(), \"UTC:yyyy-mm-dd'T'HH:MM:ss.l'Z'\");\n\nconst internalLogger = winston.createLogger({\n  level: LOG_CONFIG.level,\n  //format: winston.format.json(),\n  //format: winston.format.json(),\n  format: winston.format.combine(\n    winston.format.json({ replacer: replaceErrors })\n  ),\n  transports: [\n    new winston.transports.File({\n      filename: `${USER_DATA}/combined.log`\n    }),\n    new winston.transports.File({\n      filename: `${USER_DATA}/error.log`,\n      level: \"error\"\n    }),\n    new winston.transports.Console({\n      level: \"error\"\n    })\n  ]\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  internalLogger.add(\n    new winston.transports.Console({\n      level: LOG_CONFIG.level\n    })\n  );\n}\n\nfunction replaceErrors(key, value) {\n  if (value instanceof Buffer) {\n    return value.toString(\"base64\");\n  } else if (value instanceof Error) {\n    var error = {};\n\n    Object.getOwnPropertyNames(value).forEach(function(key) {\n      error[key] = value[key];\n    });\n\n    return error;\n  }\n\n  return value;\n}\n\nexport default class Logger {\n  private logCategory: string;\n\n  constructor(category: string) {\n    //\n    // If we're not in production then log to the `console` with the format:\n    // `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\n    //\n    this.logCategory = category;\n  }\n\n  info(message, data?) {\n    internalLogger.info({\n      timestamp: tsFormat(),\n      logCategory: this.logCategory,\n      message,\n      data: data || \"\"\n    });\n  }\n\n  debug(message, data?) {\n    internalLogger.debug({\n      timestamp: tsFormat(),\n      logCategory: this.logCategory,\n      message,\n      data: data || \"\"\n    });\n  }\n\n  verbose(message, data?) {\n    internalLogger.verbose({\n      timestamp: tsFormat(),\n      logCategory: this.logCategory,\n      message,\n      data: data || \"\"\n    });\n  }\n\n  error(message, data?) {\n    internalLogger.error({\n      timestamp: tsFormat(),\n      logCategory: this.logCategory,\n      message,\n      data: data || \"\"\n    });\n  }\n\n  warn(message, data?) {\n    internalLogger.warn({\n      timestamp: tsFormat(),\n      logCategory: this.logCategory,\n      message,\n      data: data || \"\"\n    });\n  }\n}\n","\nimport { app, remote, screen } from 'electron'\nimport Logger from '@appWindow/lib/logger'\nimport { isDev } from 'Environment'\n\nconst windowScreen = screen ? screen : remote ? remote.screen : null ;\nconst log = new Logger('toggleWindow');\n\nlet cachedXOffsetPercent, cachedYOffsetPercent\n\n/**\n * Show or hide main window\n * @return {BrowserWindow} appWindow\n */\nexport default (appWindow) => {\n  log.verbose(\"Toggling Window\")\n  if (appWindow.isVisible()) {\n    toggleOff(appWindow)\n  } else {\n    toggleOn(appWindow)\n  }\n}\n\n/**\n * \n * @param {*} appWindow The application window of the CHIPI client\n */\nexport const toggleOff = (appWindow) => {\n  // Ignore toogle off call if the window cannot toogle off\n  if (!appWindow) {\n    return;\n  }\n\n  if (!appWindow.canToggleOff) {\n    return;\n  }\n\n  updateWindowOffsets(appWindow);\n\n  appWindow.blur() // once for blurring the content of the window(?)\n  if (process.platform === 'darwin') {\n    appWindow.blur(); // On Mac, twice somehow restores focus to prev foreground window\n  }\n\n  appWindow.hide()\n  //app.dock.hide()\n\n  appWindow.removeListener('blur', () => toggleOff(appWindow));\n}\n\nconst toggleOn = (appWindow) => {\n  const windowPosition = calculateWindowPosition(appWindow);\n  appWindow.setPosition(windowPosition.x, windowPosition.y);\n\n  showWindow(appWindow);\n\n  if (!isDev()) {\n    appWindow.on('blur', () => toggleOff(appWindow));\n  }\n}\n\nexport const showWindow = (appWindow) => {\n\n  appWindow.setVisibleOnAllWorkspaces(true);\n  appWindow.show();\n  appWindow.focus();\n  appWindow.setVisibleOnAllWorkspaces(false);\n\n  if (isDev() && app.dock && !app.dock.isVisible()) {\n    app.dock.show();\n  }\n}\n\nconst updateWindowOffsets = (appWindow) => {\n  if (!appWindow.isVisible()) {\n    return;\n  }\n\n  const windowPosition = appWindow.getPosition();\n  const currentDisplay = windowScreen.getDisplayNearestPoint({ x: windowPosition[0], y: windowPosition[1] });\n  const bounds = currentDisplay.bounds;\n\n  cachedXOffsetPercent = (windowPosition[0] - bounds.x) / bounds.width;\n  cachedYOffsetPercent = (windowPosition[1] - bounds.y) / bounds.width;\n}\n\nconst calculateWindowPosition = (appWindow) => {\n  // Get mouse cursor absolute position\n  const { x, y } = windowScreen.getCursorScreenPoint();\n\n  // Find the display where the mouse cursor will be\n\n  const currentDisplay = windowScreen.getDisplayNearestPoint({ x, y });\n\n  const bounds = currentDisplay.bounds;\n\n  log.verbose('Bounds of the current display', { currentDisplay, bounds });\n\n  let winX, winY;\n\n  if (cachedXOffsetPercent && cachedYOffsetPercent) {\n    winX = Math.ceil(cachedXOffsetPercent * bounds.width + bounds.x);\n    winY = Math.ceil(cachedYOffsetPercent * bounds.width + bounds.y);\n  }\n  else {\n    winX = bounds.x + Math.ceil((bounds.width - appWindow.getSize()[0]) / 2);\n    winY = bounds.y + Math.ceil((bounds.height - appWindow.getSize()[1]) / 6);\n  }\n\n  return { x: winX, y: winY };\n}\n","import { BrowserWindow, globalShortcut, app, screen, shell, protocol, BrowserWindowConstructorOptions } from \"electron\";\nimport debounce from \"lodash/debounce\";\nimport EventEmitter from \"events\";\n\nimport { WINDOW_WIDTH, MAX_WINDOW_HEIGHT } from \"@appWindow/constants/ui\";\n\nimport buildMenu from \"@appWindow/windowElements/menu\";\nimport toggleWindow from \"@appWindow/lib/toggleWindow\";\nimport config from \"@appWindow/lib/config\";\nimport getWindowPosition from \"@appWindow/lib/getWindowPosition\";\nimport Logger from \"@appWindow/lib/logger\";\n\nconst logger = new Logger(\"MainCreateWindow\");\n\nexport default ({ src }) => {\n  const [x, y] = getWindowPosition({});\n  //const { width, height } = screen.getPrimaryDisplay().workAreaSize\n\n  const iconSrc = () => {\n    switch (process.platform) {\n      case \"darwin\":\n        return `${__dirname}/resources/icon.ico`;\n      case \"win32\":\n        return `${__dirname}/resources/icon-white.ico`;\n      default:\n        return `${__dirname}/resources/icon.ico`;\n    }\n  };\n\n  const browserWindowOptions : BrowserWindowConstructorOptions = {\n    width: WINDOW_WIDTH,\n    minWidth: WINDOW_WIDTH,\n    height: MAX_WINDOW_HEIGHT,\n    x,\n    y,\n    frame: false,\n    resizable: false,\n    hasShadow: false,\n    // Show main window on launch only when application started for the first time\n    show: true,\n    transparent: true,\n    maximizable: false,\n    titleBarStyle: \"customButtonsOnHover\",\n    minimizable: false,\n    closable: false,\n    icon: iconSrc(),\n    webPreferences: {\n      plugins: true,\n      nodeIntegration: true\n    }\n  };\n\n  const mainWindow = new BrowserWindow(browserWindowOptions);\n\n  mainWindow.loadURL(src);\n\n  mainWindow[\"settingsChanges\"] = new EventEmitter();\n  mainWindow[\"canToggleOff\"] = true;\n  /**\n   * Set quit function to the window\n   */\n  mainWindow[\"quit\"] = () => quitApplication();\n\n  // Function to toggle main window\n  const toggleMainWindow = () => toggleWindow(mainWindow);\n\n  // Function to show main window\n  const showMainWindow = () => {\n    mainWindow && mainWindow.show();\n    mainWindow && mainWindow.focus();\n  };\n\n  /**\n   * Quit the application\n   */\n  const quitApplication = () =>{\n    mainWindow.closable = true;\n    app.quit();\n  }\n\n  mainWindow.on(\"close\", () => {\n    app.quit();\n  });\n\n  mainWindow.webContents.on(\"new-window\", (event, url) => {\n    shell.openExternal(url);\n    event.preventDefault();\n  });\n\n  mainWindow.webContents.on(\"will-navigate\", (event, url) => {\n    if (url !== mainWindow.webContents.getURL()) {\n      shell.openExternal(url);\n      event.preventDefault();\n    }\n  });\n\n  // Change global hotkey if it is changed in app settings\n  mainWindow[\"settingsChanges\"].on(\"hotkey\", value => {\n    const currentShortcut = config.get(\"hotkey\");\n    globalShortcut.unregister(currentShortcut);\n    config.set(\"hotkey\", value);\n    globalShortcut.register(value, toggleMainWindow);\n  });\n\n  // Once window finish load the dom, display as required\n  mainWindow.webContents.on(\"did-finish-load\", () => {\n    logger.info(\"Main window contents did finish load\");\n    if (config.get(\"firstStart\")) {\n      showMainWindow();\n      // Save in config information, that application has been started\n      config.set(\"firstStart\", false);\n    }\n  });\n  \n  // Handle window.hide: if cleanOnHide value in preferences is true\n  // we clear all results and show empty window every time\n  const resetResults = () => {\n    mainWindow.webContents.send(\"message\", {\n      message: \"showTerm\",\n      payload: \"\"\n    });\n  };\n\n  // Handle change of cleanOnHide value in settins\n  const handleCleanOnHideChange = value => {\n    if (value) {\n      mainWindow.on(\"hide\", resetResults);\n    } else {\n      mainWindow.removeListener(\"hide\", resetResults);\n    }\n  };\n\n  // Set or remove handler when settings changed\n  mainWindow[\"settingsChanges\"].on(\"cleanOnHide\", handleCleanOnHideChange);\n\n  // Set initial handler if it is needed\n  //We don't want to clean the screen on hide at the moment\n  handleCleanOnHideChange(false /*config.get('cleanOnHide')*/);\n\n  // Restore focus in previous application\n  // MacOS only: https://github.com/electron/electron/blob/master/docs/api/app.md#apphide-macos\n  if (process.platform === \"darwin\") {\n    /*mainWindow.on('hide', () => {\n      app.hide()\n    })*/\n  }\n\n  app.on(\"activate\", showMainWindow);\n\n  buildMenu(mainWindow);\n  return mainWindow;\n};\n","import { Menu, Tray, app, dialog, ipcMain, shell, MenuItem, MenuItemConstructorOptions } from \"electron\";\nimport toggleWindow from \"@appWindow/lib/toggleWindow\";\nimport checkForUpdates from \"@appWindow/lib/checkForUpdates\";\nimport config from \"@appWindow/lib/config\";\nimport autoStart from \"@appWindow/lib/autoStart\";\n\n/**\n * Class that controls state of icon in menu bar\n */\nexport default class AppTray {\n  private tray: Tray;\n  private options: any;\n\n  /**\n   * @param  {String} options.src Absolute path for tray icon\n   * @param  {Function} options.isDev Development mode or not\n   * @param  {BrowserWindow} options.mainWindow\n   * @param  {BrowserWindow} options.backgroundWindow\n   * @return {AppTray}\n   */\n  constructor(options) {\n    this.tray = null;\n    this.options = options;\n  }\n  /**\n   * Show application icon in menu bar\n   */\n  show() {\n    const tray = new Tray(this.options.src);\n    tray.setToolTip(\"Chipi\");\n    tray.setContextMenu(this.buildMenu());\n    tray.on(\"double-click\", event => {\n      toggleWindow(this.options.mainWindow);\n    });\n    this.tray = tray;\n  }\n\n  setIsDev(isDev) {\n    this.options.isDev = isDev;\n    if (this.tray) {\n      this.tray.setContextMenu(this.buildMenu());\n    }\n  }\n\n  buildMenu() {\n    const {\n      mainWindow,\n      backgroundWindow,\n      isDev,\n      feedbackWindow\n    } = this.options;\n    const separator: MenuItemConstructorOptions = { type: \"separator\" };\n\n    const template: MenuItemConstructorOptions[] = [\n      {\n        label: \"Toggle Chipi\",\n        click: () => toggleWindow(mainWindow)\n      },\n      {\n        label: \"Toggle Shortcut\",\n        submenu: [\n          {\n            label: \"1.\",\n            accelerator: \"Control+Space\",\n            type: \"radio\",\n            checked: \"Control+Space\" === config.get(\"hotkey\"),\n            click() {\n              ipcMain.emit(\"updateSettings\", null, \"hotkey\", \"Control+Space\");\n            }\n          },\n          {\n            label: \"2.\",\n            accelerator: \"Control+Shift+Space\",\n            type: \"radio\",\n            checked: \"Control+Shift+Space\" === config.get(\"hotkey\"),\n            click() {\n              ipcMain.emit(\n                \"updateSettings\",\n                null,\n                \"hotkey\",\n                \"Control+Shift+Space\"\n              );\n            }\n          },\n          {\n            label: \"3.\",\n            accelerator: \"Alt+Space\",\n            type: \"radio\",\n            checked: \"Alt+Space\" === config.get(\"hotkey\"),\n            click() {\n              ipcMain.emit(\"updateSettings\", null, \"hotkey\", \"Alt+Space\");\n            }\n          },\n          {\n            label: \"4.\",\n            accelerator: \"Alt+Shift+Space\",\n            type: \"radio\",\n            checked: \"Alt+Shift+Space\" === config.get(\"hotkey\"),\n            click() {\n              ipcMain.emit(\"updateSettings\", null, \"hotkey\", \"Alt+Shift+Space\");\n            }\n          }\n        ]\n      },\n      separator,\n      {\n        label: \"Launch on startup\",\n        type: \"checkbox\",\n        checked: autoStart.isEnabled(),\n        click(menuItem) {\n          ipcMain.emit(\"updateSettings\", null, \"openAtLogin\", menuItem.checked);\n        }\n      },\n      separator,\n      {\n        label: \"Development\",\n        submenu: [\n          {\n            label: \"DevTools (main)\",\n            click: () => mainWindow.webContents.openDevTools({ mode: \"detach\" })\n          }\n        ]\n      },\n      separator,\n      {\n        label: \"About\",\n        click: () => {\n          const currentVersion = app.getVersion();\n  \n          dialog.showMessageBox({\n            title: \"Chipi\",\n            message: `Version: ${currentVersion}`\n          });\n        }\n      },\n      separator,\n      {\n        label: \"Quit\",\n        click: () => mainWindow.quit()\n      }\n    ];\n\n    return Menu.buildFromTemplate(template);\n  }\n  /**\n   * Hide icon in menu bar\n   */\n  hide() {\n    if (this.tray) {\n      this.tray.destroy();\n      this.tray = null;\n    }\n  }\n\n  destroy() {\n    if (this.tray) {\n      this.tray.destroy();\n      this.tray = null;\n    }\n  }\n}\n","import {Menu, app, MenuItemConstructorOptions} from 'electron'\n\nexport default function buildMenu(mainWindow) {\n  const template : MenuItemConstructorOptions[] = [{\n    label: 'Chipi',\n    submenu: [\n      { label: 'About Chipi' },\n      { type: 'separator' },\n      { label: 'Hide Chipi', accelerator: 'Command+H', },\n      { label: 'Hide Others', accelerator: 'Command+Shift+H', },\n      { label: 'Show All' },\n      { type: 'separator'},\n      { label: 'Undo', accelerator: 'CmdOrCtrl+Z'},\n      { label: 'Redo', accelerator: 'Shift+CmdOrCtrl+Z' },\n      { type: 'separator'},\n      { label: 'Cut', accelerator: 'CmdOrCtrl+X' },\n      { label: 'Copy', accelerator: 'CmdOrCtrl+C' },\n      { label: 'Paste', accelerator: 'CmdOrCtrl+V' },\n      { label: 'Select All', accelerator: 'CmdOrCtrl+A' },\n      { type: 'separator'},\n      { label: 'Quit', accelerator: 'Command+Q', click() { mainWindow.setClosable(true); app.quit() } }\n    ]\n  }]\n\n  const menu = Menu.buildFromTemplate(template)\n  Menu.setApplicationMenu(menu)\n}\n","import { app, remote } from \"electron\";\n\nexport const USER_DATA = (app || remote.app).getPath(\"userData\");\n\nexport const isDev = () => true;\n\nexport const CHECK_UPDATES = false;\n\nconst AWS_COGNITO_HOST = \"https://identity.chipi-dev.io\";\nexport const CHIPI_PROTOCOL = \"chipi-dev\";\n\nexport const AWS_COGNITO = {\n  host: AWS_COGNITO_HOST,\n  userPoolWebClientId: \"5q7ndnokabmhtuohdpucng2aud\",\n  authorizationUrl: AWS_COGNITO_HOST + \"/oauth2/authorize\",\n  tokenUrl: AWS_COGNITO_HOST + \"/oauth2/token\",\n  redirectUrl: \"https://desktop.chipi-uat.io/oauth2callback\",\n  redirectUrlWebFlow: \"https://web.chipi-dev.io/\"\n};\n\nexport const GOOGLE_AUTH = {\n  authPath: \"https://accounts.google.com/o/oauth2/v2/auth\"\n};\n\nexport const LOG_CONFIG = {\n  level: \"verbose\"\n};\n\nexport const AUTH_TOKEN_STORAGE = {\n  serviceName: \"io.chipi.client.desktop.dev\",\n  secureStoreUserName: \"ChipiCognitoUser\",\n  sessionPartitionName: \"chipiAuthSession\",\n  refreshTokenCookieName: \"refreshToken\",\n  accessTokenCookieName: \"accessToken\"\n};\n\nexport const CHIPI_WEB_CLIENT = {\n  host: \"https://web.chipi-dev.io\",\n  authorizationHashPage: \"authorization\",\n  externalRedirect: `${CHIPI_PROTOCOL}://authreturn`, // Tells web client where the external redirect should redirect after receiving authcode\n  authRedirect: \"https://web.chipi-dev.io/\" // Web client always uses this value for Cognito oAuth flow, the desktop client also needs to use this value to retrieve the refresh token.\n};\n\nexport const CHIPI_APIS = {\n  searchApiHost: \"https://api.chipi-dev.io/search\",\n  connectorApiHost: \"https://api.chipi-dev.io/connector\",\n  indexingApiHost: \"https://api.chipi-dev.io/indexing\",\n  resourceApiHost: \"https://api.chipi-dev.io/resource\",\n  helpApiHost: \"\"\n};\n\nexport const CHIPI_ANALYTICS = {\n  analyticsEventsApiHost: \"\",\n  deliveryStreamName: \"Chipi.Analytics.Events-dev\"\n};\n","module.exports = require(\"auto-launch\");","module.exports = require(\"dateformat\");","module.exports = require(\"electron\");","module.exports = require(\"electron-debug\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"lodash\");","module.exports = require(\"url\");","module.exports = require(\"winston\");"],"sourceRoot":""}